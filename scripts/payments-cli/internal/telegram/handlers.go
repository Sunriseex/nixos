package telegram

import (
	"fmt"
	"log/slog"
	"strings"

	tele "gopkg.in/telebot.v4"
)

func (b *Bot) handleStart(c tele.Context) error {
	user := c.Sender()

	slog.Info("User started bot",
		"user_id", user.ID,
		"username", user.Username,
		"first_name", user.FirstName)

	welcomeMsg := fmt.Sprintf(
		"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s!\n\n"+
			"–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏:\n"+
			"‚Ä¢ üí≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏\n"+
			"‚Ä¢ üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞–º–∏\n"+
			"‚Ä¢ üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã\n\n"+
			"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
		user.FirstName,
	)

	return c.Send(welcomeMsg, MainMenu())
}

func (b *Bot) handleHelp(c tele.Context) error {
	helpMsg := `üìñ *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*

*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/payments - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏  
/deposits - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞–º–∏
/report - –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç

*–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–≤
‚Ä¢ –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –≤–∫–ª–∞–¥–æ–≤
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ—Ç—á—ë—Ç—ã

–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.`

	return c.Send(helpMsg, BackToMainMenu())
}

func (b *Bot) handleMainMenu(c tele.Context) error {
	return c.Send("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", MainMenu())
}

func (b *Bot) handlePayments(c tele.Context) error {
	menu := PaymentsMenu()
	msg := `üí≥ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏*

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
‚Ä¢ üìã –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–µ–∂–µ–π - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
‚Ä¢ ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂ - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
‚Ä¢ ‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º - –æ—Ç–º–µ—Ç–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–π –ø–ª–∞—Ç–µ–∂ –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π`

	return c.Send(msg, menu)
}

func (b *Bot) handleDeposits(c tele.Context) error {
	menu := DepositsMenu()
	msg := `üí∞ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞–º–∏*

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
‚Ä¢ üìã –°–ø–∏—Å–æ–∫ –≤–∫–ª–∞–¥–æ–≤ - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–≤
‚Ä¢ ‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∫–ª–∞–¥ - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –≤–∫–ª–∞–¥
‚Ä¢ üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –≤–∫–ª–∞–¥ - —É–≤–µ–ª–∏—á–∏—Ç—å —Å—É–º–º—É –≤–∫–ª–∞–¥–∞
‚Ä¢ üìà –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞ - —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥`

	return c.Send(msg, menu)
}

func (b *Bot) handleReport(c tele.Context) error {
	msg := `üìä *–§—É–Ω–∫—Ü–∏—è –æ—Ç—á—ë—Ç–æ–≤*

–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...
–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã:
‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á—ë—Ç—ã
‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤`

	return c.Send(msg, BackToMainMenu())
}

func (b *Bot) handleAddPaymentStart(c tele.Context) error {
	b.states.SetState(c.Sender().ID, StateAddingPayment, nil)

	msg := `üí≥ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞*

–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞:`

	return c.Send(msg, BackToMainMenu())
}

func (b *Bot) handleAddDepositStart(c tele.Context) error {
	b.states.SetState(c.Sender().ID, StateAddingDeposit, nil)

	msg := `üí∞ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞*

–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∞:`

	return c.Send(msg, BackToMainMenu())
}

func (b *Bot) handleText(c tele.Context) error {
	userID := c.Sender().ID
	text := c.Text()

	slog.Debug("Processing text message",
		"user_id", userID,
		"text", text,
		"trimmed", strings.TrimSpace(text))

	state, exists := b.states.GetState(userID)
	if exists {
		slog.Debug("User has active state", "state", state.CurrentState)
		return b.handleStateInput(c, text, state)
	}

	trimmedText := strings.TrimSpace(text)

	slog.Debug("Checking text against known commands", "trimmed_text", trimmedText)

	switch trimmedText {
	case "üí≥ –ü–ª–∞—Ç–µ–∂–∏":
		slog.Debug("Handling Payments command")
		return b.handlePayments(c)
	case "üí∞ –í–∫–ª–∞–¥—ã":
		slog.Debug("Handling Deposits command")
		return b.handleDeposits(c)
	case "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–ª–∞—Ç–µ–∂":
		slog.Debug("Handling Add Payment command")
		return b.handleAddPaymentStart(c)
	case "‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∫–ª–∞–¥":
		slog.Debug("Handling Add Deposit command")
		return b.handleAddDepositStart(c)
	case "üìä –û—Ç—á—ë—Ç":
		slog.Debug("Handling Report command")
		return b.handleReport(c)
	case "‚ùì –ü–æ–º–æ—â—å":
		slog.Debug("Handling Help command")
		return b.handleHelp(c)
	case "üìã –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–µ–∂–µ–π":
		slog.Debug("Handling List Payments command")
		return b.handleListPayments(c)
	case "‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º":
		slog.Debug("Handling Mark Paid command")
		return b.handleMarkPaid(c)
	case "üìã –°–ø–∏—Å–æ–∫ –≤–∫–ª–∞–¥–æ–≤":
		slog.Debug("Handling List Deposits command")
		return b.handleListDeposits(c)
	case "üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –≤–∫–ª–∞–¥":
		slog.Debug("Handling Top Up Deposit command")
		return b.handleTopUpDepositStart(c)
	case "üìà –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞":
		slog.Debug("Handling Calculate Income command")
		return b.handleCalculateIncomeStart(c)
	case "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
		slog.Debug("Handling Main Menu command")
		return b.handleMainMenu(c)
	default:
		slog.Debug("Unknown command, showing main menu", "received_text", trimmedText)
		return c.Send("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ:", MainMenu())
	}
}

func (b *Bot) handleStateInput(c tele.Context, text string, state *UserState) error {
	switch state.CurrentState {
	case StateAddingPayment:
		return b.handlePaymentNameInput(c, text)
	case StateAddingDeposit:
		return b.handleDepositNameInput(c, text)
	case StateWaitingForAmount:
		return b.handleAmountInput(c, text)
	case StateWaitingForDate:
		return b.handleDateInput(c, text)
	default:
		b.states.ClearState(c.Sender().ID)
		slog.Warn("Unknown state cleared", "user_id", c.Sender().ID, "state", state.CurrentState)
		return c.Send("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", MainMenu())
	}
}

func (b *Bot) handleListPayments(c tele.Context) error {
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
	msg := `üìã *–°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–µ–∂–µ–π*

–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...
–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π.`

	return c.Send(msg, PaymentsMenu())
}

func (b *Bot) handleMarkPaid(c tele.Context) error {
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–º–µ—Ç–∫—É –ø–ª–∞—Ç–µ–∂–∞ –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ
	msg := `‚úÖ *–û—Ç–º–µ—Ç–∏—Ç—å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º*

–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...
–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–π –ø–ª–∞—Ç–µ–∂ –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π.`

	return c.Send(msg, PaymentsMenu())
}

func (b *Bot) handleListDeposits(c tele.Context) error {
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–∫–ª–∞–¥–æ–≤
	msg := `üìã *–°–ø–∏—Å–æ–∫ –≤–∫–ª–∞–¥–æ–≤*

–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...
–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–≤.`

	return c.Send(msg, DepositsMenu())
}

func (b *Bot) handleTopUpDepositStart(c tele.Context) error {
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞
	msg := `üíµ *–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞*

–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...
–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∫–ª–∞–¥.`

	return c.Send(msg, DepositsMenu())
}

func (b *Bot) handleCalculateIncomeStart(c tele.Context) error {
	// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞
	msg := `üìà *–†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞*

–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...
–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ –ø–æ –≤–∫–ª–∞–¥—É.`

	return c.Send(msg, DepositsMenu())
}

func (b *Bot) handlePaymentNameInput(c tele.Context, name string) error {
	b.states.UpdateStateData(c.Sender().ID, "name", name)
	b.states.SetState(c.Sender().ID, StateWaitingForAmount, nil)

	msg := `üí≥ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞*

–ù–∞–∑–≤–∞–Ω–∏–µ: ` + name + `

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1500.50):`

	return c.Send(msg, BackToMainMenu())
}

func (b *Bot) handleDepositNameInput(c tele.Context, name string) error {
	b.states.UpdateStateData(c.Sender().ID, "name", name)
	b.states.SetState(c.Sender().ID, StateWaitingForAmount, nil)

	msg := `üí∞ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞*

–ù–∞–∑–≤–∞–Ω–∏–µ: ` + name + `

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∫–ª–∞–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 50000):`

	return c.Send(msg, BackToMainMenu())
}

func (b *Bot) handleAmountInput(c tele.Context, amount string) error {
	b.states.UpdateStateData(c.Sender().ID, "amount", amount)
	b.states.SetState(c.Sender().ID, StateWaitingForDate, nil)

	state, _ := b.states.GetState(c.Sender().ID)
	name := ""
	if state.Data["name"] != nil {
		name = state.Data["name"].(string)
	}

	var msg string
	if state.CurrentState == StateAddingPayment {
		msg = `üí≥ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞*

–ù–∞–∑–≤–∞–Ω–∏–µ: ` + name + `
–°—É–º–º–∞: ` + amount + ` —Ä—É–±.

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–ì–ì–ì–ì-–ú–ú-–î–î) –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:`
	} else {
		msg = `üí∞ *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞*

–ù–∞–∑–≤–∞–Ω–∏–µ: ` + name + `
–°—É–º–º–∞: ` + amount + ` —Ä—É–±.

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–ì–ì–ì–ì-–ú–ú-–î–î) –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:`
	}

	return c.Send(msg, BackToMainMenu())
}

func (b *Bot) handleDateInput(c tele.Context, date string) error {
	state, _ := b.states.GetState(c.Sender().ID)
	name := ""
	amount := ""
	if state.Data["name"] != nil {
		name = state.Data["name"].(string)
	}
	if state.Data["amount"] != nil {
		amount = state.Data["amount"].(string)
	}

	b.states.ClearState(c.Sender().ID)

	var msg string
	if state.CurrentState == StateAddingPayment {
		msg = `üí≥ *–ü–ª–∞—Ç–µ–∂ –¥–æ–±–∞–≤–ª–µ–Ω!*

–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ` + name + `
‚Ä¢ –°—É–º–º–∞: ` + amount + ` —Ä—É–±.
‚Ä¢ –î–∞—Ç–∞: ` + date + `

–§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...`
	} else {
		msg = `üí∞ *–í–∫–ª–∞–¥ –¥–æ–±–∞–≤–ª–µ–Ω!*

–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ` + name + `
‚Ä¢ –°—É–º–º–∞: ` + amount + ` —Ä—É–±.
‚Ä¢ –î–∞—Ç–∞: ` + date + `

–§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...`
	}

	return c.Send(msg, MainMenu())
}
