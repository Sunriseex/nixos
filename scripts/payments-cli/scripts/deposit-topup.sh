#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∫–ª–∞–¥–∞–º–∏ –¥–ª—è –Ø–Ω–¥–µ–∫—Å–ë–∞–Ω–∫–∞
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –±–µ—Å—Å—Ä–æ—á–Ω—ã–µ –∏ —Å—Ä–æ—á–Ω—ã–µ –≤–∫–ª–∞–¥—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_DIR="$HOME/.config/waybar"
DEPOSITS_FILE="$CONFIG_DIR/deposits.json"
CONFIG_FILE="$CONFIG_DIR/deposits.conf"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
init_config() {
    if [[ ! -d "$CONFIG_DIR" ]]; then
        mkdir -p "$CONFIG_DIR"
        log "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $CONFIG_DIR"
    fi

    if [[ ! -f "$CONFIG_FILE" ]]; then
        cat >"$CONFIG_FILE" <<EOF
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∫–ª–∞–¥–∞–º–∏
DEPOSITS_FILE="$DEPOSITS_FILE"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFY_DAYS_BEFORE_PROMO_END=7
NOTIFY_DAYS_BEFORE_DEPOSIT_END=30
NOTIFY_DAYS_BEFORE_TOPUP_END=3

# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
TELEGRAM_BOT_TOKEN=""
TELEGRAM_CHAT_ID=""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ø–Ω–¥–µ–∫—Å–ë–∞–Ω–∫–∞
YANDEX_BANK_SAVE_RATE=17.0
YANDEX_BANK_NORMAL_RATE=12.0
YANDEX_BANK_PROMO_END_DATE="2025-10-24"
EOF
        warn "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $CONFIG_FILE"
    fi

    source "$CONFIG_FILE"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –≤–∫–ª–∞–¥–æ–≤
init_deposits_file() {
    if [[ ! -f "$DEPOSITS_FILE" ]]; then
        cat >"$DEPOSITS_FILE" <<EOF
{
  "deposits": [
    {
      "id": "yandex-save-1",
      "name": "–Ø–Ω–¥–µ–∫—Å –°–µ–π–≤ (–±–µ—Å—Å—Ä–æ—á–Ω—ã–π)",
      "bank": "–Ø–Ω–¥–µ–∫—Å –ë–∞–Ω–∫",
      "type": "savings",
      "amount": 0,
      "interest_rate": $YANDEX_BANK_SAVE_RATE,
      "promo_rate": $YANDEX_BANK_NORMAL_RATE,
      "promo_end_date": "$YANDEX_BANK_PROMO_END_DATE",
      "start_date": "$(date +%Y-%m-%d)",
      "capitalization": "daily",
      "auto_renewal": true,
      "top_up_end_date": "",
      "created_at": "$(date -Iseconds)"
    },
    {
      "id": "yandex-term-1", 
      "name": "–Ø–Ω–¥–µ–∫—Å –°—Ä–æ—á–Ω—ã–π (3 –º–µ—Å)",
      "bank": "–Ø–Ω–¥–µ–∫—Å –ë–∞–Ω–∫",
      "type": "term",
      "amount": 0,
      "interest_rate": 17.0,
      "start_date": "$(date +%Y-%m-%d)",
      "end_date": "$(date -d "+3 months" +%Y-%m-%d)",
      "term_months": 3,
      "capitalization": "end",
      "auto_renewal": true,
      "top_up_end_date": "$(date -d "+7 days" +%Y-%m-%d)",
      "created_at": "$(date -Iseconds)"
    }
  ]
}
EOF
        log "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –≤–∫–ª–∞–¥–æ–≤ —Å —à–∞–±–ª–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local deps=("jq" "date")
    for dep in "${deps[@]}"; do
        if ! command -v "$dep" &>/dev/null; then
            error "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —É—Ç–∏–ª–∏—Ç–∞: $dep"
            exit 1
        fi
    done
}

# –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞ –ø–æ –≤–∫–ª–∞–¥—É
calculate_income() {
    local deposit_id=$1
    local days=$2

    local deposit_data=$(jq -r ".deposits[] | select(.id == \"$deposit_id\")" "$DEPOSITS_FILE")
    if [[ -z "$deposit_data" ]]; then
        error "–í–∫–ª–∞–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: $deposit_id"
        return 1
    fi

    local amount=$(echo "$deposit_data" | jq -r '.amount')
    local rate=$(echo "$deposit_data" | jq -r '.interest_rate')
    local capitalization=$(echo "$deposit_data" | jq -r '.capitalization')

    if [[ $amount -eq 0 ]]; then
        echo "0"
        return 0
    fi

    local income=0
    case $capitalization in
    "daily")
        income=$(echo "scale=2; $amount * $rate / 100 / 365 * $days" | bc -l)
        ;;
    "monthly")
        local months=$(echo "scale=2; $days / 30" | bc -l)
        income=$(echo "scale=2; $amount * $rate / 100 / 12 * $months" | bc -l)
        ;;
    "end")
        income=$(echo "scale=2; $amount * $rate / 100 * $days / 365" | bc -l)
        ;;
    *)
        income=$(echo "scale=2; $amount * $rate / 100 * $days / 365" | bc -l)
        ;;
    esac

    echo "$income"
}

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤–∫–ª–∞–¥
deposit_topup() {
    local deposit_id=$1
    local amount=$2
    local description="${3:-–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞}"

    if [[ ! -f "$DEPOSITS_FILE" ]]; then
        error "–§–∞–π–ª –≤–∫–ª–∞–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    local deposit_name=$(jq -r ".deposits[] | select(.id == \"$deposit_id\") | .name" "$DEPOSITS_FILE")
    if [[ -z "$deposit_name" ]]; then
        error "–í–∫–ª–∞–¥ —Å ID '$deposit_id' –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    if ! [[ "$amount" =~ ^[0-9]+$ ]]; then
        error "–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º"
        return 1
    fi

    log "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞ '$deposit_name' –Ω–∞ —Å—É–º–º—É $amount —Ä—É–±."

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É –≤ JSON
    local current_amount=$(jq -r ".deposits[] | select(.id == \"$deposit_id\") | .amount" "$DEPOSITS_FILE")
    local new_amount=$((current_amount + amount * 100)) # –•—Ä–∞–Ω–∏–º –≤ –∫–æ–ø–µ–π–∫–∞—Ö

    jq "(.deposits[] | select(.id == \"$deposit_id\") | .amount) = $new_amount" "$DEPOSITS_FILE" >"${DEPOSITS_FILE}.tmp"

    if mv "${DEPOSITS_FILE}.tmp" "$DEPOSITS_FILE"; then
        log "–í–∫–ª–∞–¥ —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω. –ù–æ–≤–∞—è —Å—É–º–º–∞: $((new_amount / 100)) —Ä—É–±."

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        send_notification "üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∞" "–í–∫–ª–∞–¥ '$deposit_name' –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ $amount —Ä—É–±. –¢–µ–∫—É—â–∞—è —Å—É–º–º–∞: $((new_amount / 100)) —Ä—É–±."
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –≤–∫–ª–∞–¥–æ–≤"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –ø–æ –≤–∫–ª–∞–¥–∞–º
check_deposit_conditions() {
    local today=$(date +%Y-%m-%d)
    local notifications=()

    while IFS= read -r deposit; do
        local id=$(echo "$deposit" | jq -r '.id')
        local name=$(echo "$deposit" | jq -r '.name')
        local type=$(echo "$deposit" | jq -r '.type')
        local promo_end_date=$(echo "$deposit" | jq -r '.promo_end_date // ""')
        local end_date=$(echo "$deposit" | jq -r '.end_date // ""')
        local top_up_end_date=$(echo "$deposit" | jq -r '.top_up_end_date // ""')

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–æ–º–æ-–ø–µ—Ä–∏–æ–¥–∞
        if [[ -n "$promo_end_date" ]]; then
            local days_until_promo=$((($(date -d "$promo_end_date" +%s) - $(date -d "$today" +%s)) / 86400))
            if [[ $days_until_promo -le $NOTIFY_DAYS_BEFORE_PROMO_END ]] && [[ $days_until_promo -ge 0 ]]; then
                notifications+=("üü° –ü–æ –≤–∫–ª–∞–¥—É '$name' –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–∫—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å $days_until_promo –¥–Ω.")
            fi
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ—á–Ω–æ–≥–æ –≤–∫–ª–∞–¥–∞
        if [[ "$type" == "term" && -n "$end_date" ]]; then
            local days_until_end=$((($(date -d "$end_date" +%s) - $(date -d "$today" +%s)) / 86400))
            if [[ $days_until_end -le $NOTIFY_DAYS_BEFORE_DEPOSIT_END ]] && [[ $days_until_end -ge 0 ]]; then
                notifications+=("üî¥ –°—Ä–æ—á–Ω—ã–π –≤–∫–ª–∞–¥ '$name' –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ $days_until_end –¥–Ω.")
            fi
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        if [[ -n "$top_up_end_date" ]]; then
            local days_until_topup=$((($(date -d "$top_up_end_date" +%s) - $(date -d "$today" +%s)) / 86400))
            if [[ $days_until_topup -le $NOTIFY_DAYS_BEFORE_TOPUP_END ]] && [[ $days_until_topup -ge 0 ]]; then
                notifications+=("üîµ –ü–æ –≤–∫–ª–∞–¥—É '$name' –ø–µ—Ä–∏–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ $days_until_topup –¥–Ω.")
            fi
        fi

    done < <(jq -c '.deposits[]' "$DEPOSITS_FILE")

    # –í—ã–≤–æ–¥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if [[ ${#notifications[@]} -gt 0 ]]; then
        echo "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –≤–∫–ª–∞–¥–∞–º:"
        echo "======================"
        for notification in "${notifications[@]}"; do
            echo "‚Ä¢ $notification"
        done
        echo ""
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
send_notification() {
    local title=$1
    local message=$2

    # –õ–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if command -v notify-send &>/dev/null; then
        notify-send "$title" "$message"
    fi

    # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    info "$title: $message"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤–∫–ª–∞–¥–æ–≤
list_deposits() {
    if [[ ! -f "$DEPOSITS_FILE" ]]; then
        error "–§–∞–π–ª –≤–∫–ª–∞–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    local total_count=$(jq '.deposits | length' "$DEPOSITS_FILE")
    if [[ $total_count -eq 0 ]]; then
        info "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–≤"
        return 0
    fi

    echo "–ê–∫—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥—ã:"
    echo "================"

    jq -r '.deposits[] | "\(.name) | \(.bank) | \(.amount / 100 | tonumber) —Ä—É–±. | \(.interest_rate)% | \(.type) | –°–æ–∑–¥–∞–Ω: \(.start_date)"' "$DEPOSITS_FILE" | while read -r line; do
        echo "  ‚Ä¢ $line"
    done

    local total_amount=$(jq '[.deposits[].amount] | add / 100' "$DEPOSITS_FILE")
    echo ""
    echo "–û–±—â–∞—è —Å—É–º–º–∞ –≤–∫–ª–∞–¥–æ–≤: $total_amount —Ä—É–±."
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç –ø–æ –≤–∫–ª–∞–¥–∞–º
update_deposit_dates() {
    local deposit_id=$1

    if [[ ! -f "$DEPOSITS_FILE" ]]; then
        error "–§–∞–π–ª –≤–∫–ª–∞–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    local deposit_data=$(jq -r ".deposits[] | select(.id == \"$deposit_id\")" "$DEPOSITS_FILE")
    if [[ -z "$deposit_data" ]]; then
        error "–í–∫–ª–∞–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: $deposit_id"
        return 1
    fi

    local type=$(echo "$deposit_data" | jq -r '.type')
    local term_months=$(echo "$deposit_data" | jq -r '.term_months // 0')

    if [[ "$type" == "term" && $term_months -gt 0 ]]; then
        local new_end_date=$(date -d "+$term_months months" +%Y-%m-%d)
        local new_top_up_end_date=$(date -d "+7 days" +%Y-%m-%d)

        jq "(.deposits[] | select(.id == \"$deposit_id\") | .end_date) = \"$new_end_date\" | (.deposits[] | select(.id == \"$deposit_id\") | .top_up_end_date) = \"$new_top_up_end_date\"" "$DEPOSITS_FILE" >"${DEPOSITS_FILE}.tmp"

        if mv "${DEPOSITS_FILE}.tmp" "$DEPOSITS_FILE"; then
            log "–î–∞—Ç—ã –≤–∫–ª–∞–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –ù–æ–≤—ã–π —Å—Ä–æ–∫ –¥–æ: $new_end_date"
        else
            error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞—Ç –≤–∫–ª–∞–¥–∞"
        fi
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_dependencies
    init_config
    init_deposits_file

    case "${1:-}" in
    "list")
        list_deposits
        ;;
    "topup")
        if [[ $# -lt 3 ]]; then
            error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 topup <deposit_id> <amount> [description]"
            exit 1
        fi
        deposit_topup "$2" "$3" "${4:-}"
        ;;
    "check")
        check_deposit_conditions
        ;;
    "update")
        if [[ $# -lt 2 ]]; then
            error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 update <deposit_id>"
            exit 1
        fi
        update_deposit_dates "$2"
        ;;
    "calculate")
        if [[ $# -lt 3 ]]; then
            error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 calculate <deposit_id> <days>"
            exit 1
        fi
        calculate_income "$2" "$3"
        ;;
    "help" | "-h" | "--help")
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {list|topup|check|update|calculate}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  list                           - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∫–ª–∞–¥–æ–≤"
        echo "  topup <id> <amount> [desc]     - –ü–æ–ø–æ–ª–Ω–∏—Ç—å –≤–∫–ª–∞–¥"
        echo "  check                          - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏—è –ø–æ –≤–∫–ª–∞–¥–∞–º"
        echo "  update <id>                    - –û–±–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—ã –≤–∫–ª–∞–¥–∞ (–ø—Ä–æ–ª–æ–Ω–≥–∞—Ü–∏—è)"
        echo "  calculate <id> <days>          - –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–æ—Ö–æ–¥ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0 list"
        echo "  $0 topup yandex-save-1 5000"
        echo "  $0 check"
        echo "  $0 update yandex-term-1"
        echo "  $0 calculate yandex-save-1 30"
        ;;
    *)
        if [[ -z "$1" ]]; then
            list_deposits
            echo ""
            check_deposit_conditions
        else
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
        fi
        ;;
    esac
}

main "$@"
